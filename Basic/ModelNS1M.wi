




WIMyClass
    NSSet previousKeysInHisqname (dealloc,nodef,readonly,ivar=previousKeysInHisqname)
    NSSet keysInHisqname (dealloc,nodef,readonly,ivar=keysInHisqname)
    NSUInteger keyInHisqname={return(self.keysInHisqname.anyObject);}

    -(int)commitProperties:(int)substageIndex {@-3 
        [previousKeysInHisqname release];
        previousKeysInHisqname=keysInHisqname;
        keysInHisqname=self.keysInHisname.copy;
        
        if (previousKeysInHisqname?!(keysInHisqname&&[previousKeysInHisqname isEqualToSet:keysInHisqname]):(keysInHisqname!=nil)) {
            modelObjectHasChanged=YES;
        }
    }
    
    -(void)cleanupCommit {
        [previousKeysInHisqname release];previousKeysInHisqname=nil;
    }


    -(JustMyClassOverride*)overrideHisqnameAs:(NSHisClass)ahisqname forContext:(id<NSCopying>)__acontext {@-1000 ERR("__Class__ Please set keys");}

    -(JustMyClassOverride*)overrideHisqnameAs:(NSHisClass)ahisqname myKeys:(NSSet*)keys forContext:(id<NSCopying>)__acontext {
        if (!__acontext) return(nil);
        JustMyClassOverride *ret=[self hisqnameOverrideForKey:__acontext];
        if (!ret) [self setHisqnameOverride:ret=[[JustMyClassOverride alloc] init] forKey:__acontext];
        [ret setHisqname:ahisqname myKeys:keys];
        [ret release];
        return(ret);
    }

    -(NSSet*)keysInHisqnameGivenContext:(id<NSCopying>)__acontext {
        JustMyClassOverride *o=(!__acontext?nil:[self hisqnameOverrideForKey:__acontext]);
        return(o?o.keysInHisqname:keysInHisqname);
    }
    -(NSSet*)previousKeysInHisqnameGivenContext:(id<NSCopying>)__acontext {
        JustMyClassOverride *o=(!__acontext?nil:[self hisqnameOverrideForKey:__acontext]);
        return(o?o.previousKeysInHisqname:previousKeysInHisqname);
    }




JustMyClassOverride
    -(init)init{}

    NSSet previousKeysInHisqname (dealloc,nodef,readonly,ivar=previousKeysInHisqname)
    NSSet keysInHisqname=
        {return(useMyHisqname&&keysInHisqname?keysInHisqname:self.baseWithHisqname.keysInHisqname);} (dealloc,ivar=keysInHisqname)
    NSUInteger keyInHisqname={return(self.keysInHisqname.anyObject);}

    -(void)setHisqname:(NSHisClass)v {@-1000 ERR("__Class__ Please set keys");}

    -(void)setHisqname:(NSHisClass)v myKeys:(NSSet*)keys {
        [hisqname release];
        [keysInHisqname release];
        hisqname=[v retain];
        keysInHisqname=keys.copy;
        useMyHisqname=YES;
        [self markDirty];
    }
    
    -(int)commitProperties:(int)substageIndex {
        [previousKeysInHisqname release];
        previousKeysInHisqname=keysInHisqname;
        keysInHisqname=nil;
    }
    
    -(void)cleanupCommit {
        [previousKeysInHisqname release];previousKeysInHisqname=nil;
    }


